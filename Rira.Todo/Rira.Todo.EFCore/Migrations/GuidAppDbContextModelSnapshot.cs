// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rira.Todo.EFCore;

#nullable disable

namespace Rira.Todo.EFCore.Migrations
{
    [DbContext(typeof(GuidAppDbContext))]
    partial class GuidAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rira.Todo.Domain.Entities.AppSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BatterySaverMode")
                        .HasColumnType("bit");

                    b.Property<string>("CurrentPlan")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FeedbackEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HelpCenterURL")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("NotificationsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PlanRenewalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StorageLocation")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("TwoFactorAuthenticationEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("AppSettings", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f9a8dbf-78c9-4ef6-bdbc-98f7802db983"),
                            BatterySaverMode = false,
                            CurrentPlan = "Free",
                            Email = "admin@app.com",
                            FeedbackEmail = "feedback@app.com",
                            HelpCenterURL = "https://help.app.com",
                            Language = "English",
                            Name = "DefaultSettings",
                            NotificationsEnabled = true,
                            PlanRenewalDate = new DateTime(2025, 4, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StorageLocation = "Local",
                            Theme = "Light",
                            TwoFactorAuthenticationEnabled = false,
                            Username = "admin",
                            Version = "1.0.0"
                        });
                });

            modelBuilder.Entity("Rira.Todo.Domain.Entities.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TodoItem", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
